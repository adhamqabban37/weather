// script.js

// API Configuration
const API_KEY = '9ca7afbb4e8af7702b98462af279f9b5';
const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';

// DOM Elements
const searchForm = document.getElementById('search-form');
const cityInput = document.getElementById('city-input');
const weatherCard = document.getElementById('weather-card');
const loadingIndicator = document.getElementById('loading');
const errorMessage = document.getElementById('error-message');
const backgroundElements = document.getElementById('background-elements');

// Background elements for different weather conditions
const backgroundConfig = {
    'clear': {
        class: 'sunny-bg',
        elements: '<div class="sun"></div>'
    },
    'clouds': {
        class: 'cloudy-bg',
        elements: `
            <div class="cloud cloud1"></div>
            <div class="cloud cloud2"></div>
            <div class="cloud cloud3"></div>
        `
    },
    'rain': {
        class: 'bg-gradient-to-br from-gray-400 to-gray-700',
        elements: ''
    },
    'snow': {
        class: 'snowy-bg',
        elements: ''
    },
    'thunderstorm': {
        class: 'bg-gradient-to-br from-gray-700 to-gray-900',
        elements: ''
    },
    'drizzle': {
        class: 'bg-gradient-to-br from-gray-300 to-gray-500',
        elements: ''
    },
    'mist': {
        class: 'bg-gradient-to-br from-gray-200 to-gray-400',
        elements: ''
    },
    'smoke': {
        class: 'bg-gradient-to-br from-gray-300 to-gray-500',
        elements: ''
    },
    'haze': {
        class: 'bg-gradient-to-br from-gray-300 to-gray-500',
        elements: ''
    },
    'dust': {
        class: 'bg-gradient-to-br from-yellow-200 to-yellow-500',
        elements: ''
    },
    'fog': {
        class: 'bg-gradient-to-br from-gray-200 to-gray-400',
        elements: ''
    },
    'sand': {
        class: 'bg-gradient-to-br from-yellow-200 to-yellow-500',
        elements: ''
    },
    'ash': {
        class: 'bg-gradient-to-br from-gray-400 to-gray-700',
        elements: ''
    },
    'squall': {
        class: 'bg-gradient-to-br from-gray-500 to-gray-800',
        elements: ''
    },
    'tornado': {
        class: 'bg-gradient-to-br from-gray-600 to-gray-900',
        elements: ''
    },
    'default': {
        class: 'bg-gradient-to-br from-blue-400 to-blue-600',
        elements: ''
    }
};

// Event Listeners
searchForm.addEventListener('submit', handleFormSubmit);

// Form submission handler
function handleFormSubmit(e) {
    e.preventDefault();
    const city = cityInput.value.trim();

    if (city) {
        fetchWeatherData(city);
    }
}

// Fetch weather data from API
async function fetchWeatherData(city) {
    // Show loading, hide previous results and errors
    loadingIndicator.classList.remove('hidden');
    weatherCard.classList.add('hidden');
    errorMessage.classList.add('hidden');

    try {
        const response = await fetch(`${BASE_URL}?q=${encodeURIComponent(city)}&units=metric&appid=${API_KEY}`);

        if (!response.ok) {
            throw new Error('City not found');
        }

        const data = await response.json();
        displayWeatherData(data);
    } catch (error) {
        showError(error.message);
    } finally {
        loadingIndicator.classList.add('hidden');
    }
}

// Display weather data
function displayWeatherData(data) {
    // Update background based on weather condition
    updateBackground(data.weather[0].main.toLowerCase());

    // Update weather card content
    document.getElementById('city-name').textContent = `${data.name}, ${data.sys.country}`;
    document.getElementById('temperature').textContent = `${Math.round(data.main.temp)}°C`;
    document.getElementById('weather-description').textContent = data.weather[0].description;
    document.getElementById('humidity').textContent = `Humidity: ${data.main.humidity}%`;
    document.getElementById('wind').textContent = `Wind: ${data.wind.speed} m/s`;
    document.getElementById('feels-like').textContent = `Feels like: ${Math.round(data.main.feels_like)}°C`;

    // Update weather icon
    const iconUrl = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
    const iconElement = document.getElementById('weather-icon');
    iconElement.innerHTML = `<img src="${iconUrl}" alt="${data.weather[0].description}" class="w-full h-full">`;

    // Show weather card
    weatherCard.classList.remove('hidden');
}

// Update background based on weather condition
function updateBackground(weatherCondition) {
    // Remove all current background classes
    document.body.className = 'min-h-screen flex items-center justify-center p-4 transition-colors duration-500';

    // Get the appropriate background config or use default
    const config = backgroundConfig[weatherCondition] || backgroundConfig['default'];

    // Add the new background class
    document.body.classList.add(...config.class.split(' '));

    // Clear previous background elements
    backgroundElements.innerHTML = '';

    // Add background elements if they exist
    if (config.elements) {
        backgroundElements.innerHTML = config.elements;
    }

    // Special case for snow - add animated snowflakes
    if (weatherCondition === 'snow') {
        createSnowflakes();
    }
}

// Create animated snowflakes for snowy weather
function createSnowflakes() {
    const snowflakeCount = 30;

    for (let i = 0; i < snowflakeCount; i++) {
        const snowflake = document.createElement('div');
        snowflake.classList.add('snowflake');
        snowflake.innerHTML = '❄';

        // Random positioning and animation duration
        const leftPos = Math.random() * 100;
        const animationDuration = Math.random() * 5 + 5;
        const delay = Math.random() * 5;
        const opacity = Math.random() * 0.5 + 0.5;
        const size = Math.random() * 0.5 + 0.5;

        snowflake.style.left = `${leftPos}%`;
        snowflake.style.animationDuration = `${animationDuration}s`;
        snowflake.style.animationDelay = `${delay}s`;
        snowflake.style.opacity = opacity;
        snowflake.style.fontSize = `${size}rem`;

        backgroundElements.appendChild(snowflake);
    }
}

// Show error message
function showError(message) {
    errorMessage.textContent = `Error: ${message}. Please try another city.`;
    errorMessage.classList.remove('hidden');
}

// Initialize with a default city
window.addEventListener('load', () => {
    fetchWeatherData('London');
});
